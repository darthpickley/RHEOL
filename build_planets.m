%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% build_planet
%
% Contruct array of planetary data
% Laurent Montesi, 09-30-2002
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% planet
%       |_ .name
%       |_ .global
%                |_ .gravity (m.s^{-2})
%                |_ .radius  (m)
%                |_ .mass    (kg)
%       |_ .env
%                |_ .Ts  %surface temperature (Kelvin)
%                |_ .Ti  %adiabatic mantle temperature (Kelvin)
%                |_ .G   %surface geotherm (K.m^{-1))
%                |_ .P0  %surface pressure (Pa)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% unit conversion
earth_gravity=9.78;
earth_radius=6378*1000;
earth_mass=5.973e24;
celsius=273.15;
atm=1e5/0.98692;
Grav=6.6726e-11;
%template with default values
id=0;
planet = struct(...
    'name','',...
    'global',struct(...
        'gravity',earth_gravity,...
        'radius',earth_radius,...
        'mass',earth_mass),...
    'env',struct(...
        'Ts',25+celsius,...
        'Ti',1350+celsius,...
        'G',20/1000,...
        'P0',atm)...   
    );

% Mercury
id=id+1;
planet(id)= struct(...
    'name','Mercury',...
    'global',struct(...
        'gravity',3.70,...
        'radius',2439*1000,...
        'mass',0.3303e24),...
    'env',struct(...
        'Ts',440,...
        'Ti',1350+celsius,...
        'G',30/1000,...
        'P0',0)...   
    );

% Venus 
id=id+1;
planet(id)= struct(...
    'name','Venus',...
    'global',struct(...
        'gravity',8.87,...
        'radius',0.949*earth_radius,...
        'mass',0.8150*earth_mass),...
    'env',struct(...
        'Ts',730,...
        'Ti',1350+celsius,...
        'G',10/1000,...
        'P0',100*atm)...   
    );
% Earth 
id=id+1;
planet(id)= struct(...
    'name','Earth',...
    'global',struct(...
        'gravity',9.81,...
        'radius',earth_radius,...
        'mass',earth_mass),...
    'env',struct(...
        'Ts',288,...
        'Ti',1350+celsius,...
        'G',20/1000,...
        'P0',atm)...   
    );
% Mars
id=id+1;
planet(id)= struct(...
    'name','Mars',...
    'global',struct(...
        'gravity',3.69,...
        'radius',0.532*earth_radius,...
        'mass',0.1074*earth_mass),...
    'env',struct(...
        'Ts',218,...
        'Ti',1350+celsius,...
        'G',10/1000,...
        'P0',0.85)...   
    );

% Moon
id=id+1;
planet(id)= struct(...
    'name','Moon',...
    'global',struct(...
        'gravity',1.62,...
        'radius',0.272*earth_radius,...
        'mass',0.0123*earth_mass),...
    'env',struct(...
        'Ts',celsius-20,...
        'Ti',1350+celsius,...
        'G',5/1000,...
        'P0',0)...   
    );
% Io
id=id+1;
planet(id)= struct(...
    'name','Io',...
    'global',struct(...
        'gravity',0,...
        'radius',1821*1000,...
        'mass',89.23e21),...
    'env',struct(...
        'Ts',celsius-155,...
        'Ti',1350+celsius,...
        'G',30/1000,...
        'P0',0)...   
    );
% Europa
id=id+1;
planet(id)= struct(...
    'name','Europa',...
    'global',struct(...
        'gravity',0,...
        'radius',1569*1000,...
        'mass',48e21),...
    'env',struct(...
        'Ts',celsius-170,...
        'Ti',1350+celsius,...
        'G',30/1000,...
        'P0',atm)...   
    );
% Ganymede
id=id+1;
planet(id)= struct(...
    'name','Ganymede',...
    'global',struct(...
        'gravity',0,...
        'radius',2634*1000,...
        'mass',148e21),...
    'env',struct(...
        'Ts',120,...%celsius-160,...
        'Ti',260,...%1350+celsius,...
        'G',30/1000,...
        'P0',0)...   
    );
% Callisto
id=id+1;
planet(id)= struct(...
    'name','Callisto',...
    'global',struct(...
        'gravity',0,...
        'radius',2403*1000,...
        'mass',107.6e21),...
    'env',struct(...
        'Ts',celsius-155,...
        'Ti',1350+celsius,...
        'G',30/1000,...
        'P0',0)...   
    );
nplanets=size(planet,2);
for ip=1:nplanets
    if planet(ip).global.gravity == 0
        planet(ip).global.gravity=Grav.*...
            planet(ip).global.mass./...
            (planet(ip).global.radius.^2);
    end
end

save 'planet' planet nplanets